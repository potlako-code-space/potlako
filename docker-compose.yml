version: "3.9"

services:
  db:
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    env_file:
      - ./.env
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DB_PASSWORD: ${MYSQL_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PORT: 3306
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: [ "CMD", "mysqladmin","-p${MYSQL_ROOT_PASSWORD}","ping","-h","localhost" ]
      interval: 20s
      timeout: 10s
      retries: 10
  web:
    build: .
    command: ["/bin/bash", "-c", "/app/mysql/db_restore.sh && ./wait_for_db.sh db ${MYSQL_USER} ${MYSQL_DB_PASSWORD} python manage.py runserver 0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      EDC_SMS_BASE_API_URL: ${EDC_SMS_BASE_API_URL}
      BASE_API_URL: ${BASE_API_URL}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      COMMUNITIES_ENHANCED_CARE: ${COMMUNITIES_ENHANCED_CARE}
      COMMUNITIES_INTERVENTION: ${COMMUNITIES_INTERVENTION}
      EDC_DEVICE_ROLE: ${EDC_DEVICE_ROLE}
      EDC_DEVICE_ID: ${EDC_DEVICE_ID}
      EDC_SYNC_SERVER_IP: ${EDC_SYNC_SERVER_IP}
      EDC_SYNC_EVALUATION_TIMELINE_API: ${EDC_SYNC_EVALUATION_TIMELINE_API}
      EDC_SYNC_NAV_PLAN_API: ${EDC_SYNC_NAV_PLAN_API}
      EDC_SYNC_FILES_SYNC_USER: ${EDC_SYNC_FILES_SYNC_USER}
      EDC_SYNC_FILES_REMOTE_HOST: ${EDC_SYNC_FILES_REMOTE_HOST}
      EDC_SYNC_FILES_USB_VOLUME: ${EDC_SYNC_FILES_USB_VOLUME}
      EDC_SYNC_FILES_REMOTE_MEDIA: ${EDC_SYNC_FILES_REMOTE_MEDIA}
      MYSQL_HOST: db
      MYSQL_DB_PASSWORD: ${MYSQL_DB_PASSWORD}
      MYSQL_DB_NAME: ${MYSQL_DB_NAME}
      MYSQL_USER: ${MYSQL_USER}

volumes:
  mysql_data: